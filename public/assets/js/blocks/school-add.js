$(function() {
  var $formMsgContainer, ajaxSelectSchool, checkExistsSchool, clearMsgBlock, disableBtn, highlight, msgTimeout, numberTimer, preloader, registrationForm, removeDisableBtn, removeFormHighLights, schoolAjaxPage, showMsg;
  $formMsgContainer = $('#form-msg');
  registrationForm = $('.registration__form');
  preloader = registrationForm.preloader();
  $('.registration__form')[0].noValidate = true;
  msgTimeout = null;
  clearMsgBlock = function() {
    if (typeof msgTimeout !== 'null') {
      clearTimeout(msgTimeout);
    }
    $formMsgContainer.children('p').remove();
    return $formMsgContainer.slideUp(300);
  };
  showMsg = function(msgText, success) {
    var messageWrapper;
    if (success) {
      $formMsgContainer.addClass('msg--success');
    } else if (!success && $formMsgContainer.hasClass('msg--success')) {
      $formMsgContainer.removeClass('msg--success');
    }
    messageWrapper = $($('.js-message_wrapper').html());
    messageWrapper.html(msgText);
    $formMsgContainer.append(messageWrapper);
    $formMsgContainer.slideDown(400);
    msgTimeout = setTimeout(function() {
      return $formMsgContainer.slideUp(300);
    }, 7000);
    return $(document).scrollTop($formMsgContainer.offset().top / 1.5);
  };
  disableBtn = function(form) {
    return form.find('.js-submit_form').attr('disabled', true);
  };
  removeDisableBtn = function(form) {
    return form.find('.js-submit_form').attr('disabled', false);
  };
  highlight = function(elem) {
    $(elem).parent().addClass('input-invalid');
    return $(elem).on('focus click', function() {
      return $(this).parent().removeClass('input-invalid');
    });
  };
  removeFormHighLights = function(form) {
    return form.find('.input-invalid').removeClass('input-invalid');
  };
  registrationForm.on('submit', function(e) {
    var $that, ajaxUrl, concatSymbol, foundation;
    e.preventDefault();
    $that = $(this);
    clearMsgBlock();
    disableBtn($that);
    removeFormHighLights($that);
    preloader.show();
    ajaxUrl = $that.attr('action');
    concatSymbol = ajaxUrl.indexOf('?') > 0 ? '&' : '?';
    foundation = Foundation !== void 0 ? Foundation.MediaQuery.current : 'large';
    return $.ajax({
      url: "" + ajaxUrl + concatSymbol + "ajax=Y&foundation=" + foundation,
      method: 'POST',
      dataType: 'json',
      data: $that.serialize(),
      success: function(result) {
        removeDisableBtn($that);
        preloader.hide();
        if (result && typeof result === 'object' && result.hasOwnProperty('status')) {
          if (result.status === 'success') {
            return window.location.replace(window.location.pathname + '?status=success');
          } else if (result.status === 'error') {
            if (result.hasOwnProperty('text') && result.text) {
              return $.each(result.text, function(errorCode, errorValue) {
                var element, errorField, i, len, results;
                if (errorCode === 'empty') {
                  results = [];
                  for (i = 0, len = errorValue.length; i < len; i++) {
                    errorField = errorValue[i];
                    element = $that.find("#" + errorField);
                    if (element && element.length > 0 && element.is(':visible') && !element.is(':disabled')) {
                      results.push(highlight(element[0]));
                    } else {
                      results.push(void 0);
                    }
                  }
                  return results;
                } else {
                  return showMsg(errorValue);
                }
              });
            }
          }
        }
      }
    });
  });
  $('.js-toggle_award_address').on('change', function() {
    return $('.js-post_address_field').attr('disabled', $(this).is(':checked'));
  });
  $('.js-toggle_award_address').change();
  $('.js-country_field').on('change', function() {
    var typeField;
    typeField = $('#TYPE');
    preloader = registrationForm.preloader('show');
    return $.getJSON(registrationForm.attr('href'), registrationForm.serialize() + '&ajax=Y&action=changeCountry', function(result) {
      if (result.hasOwnProperty('status') && result.status === 'success' && result.hasOwnProperty('text')) {
        typeField.replaceWith(result.text);
      }
      return preloader.hide();
    });
  });
  schoolAjaxPage = '/ajax/school.php';
  ajaxSelectSchool = function(e) {
    e.preventDefault();
    preloader.show();
    return $.post(schoolAjaxPage, {
      SCHOOL_ID: $(this).data('id'),
      ACTION: 'CHOOSE_SESSION_SCHOOL'
    }, function() {
      preloader.hide();
      return window.location.href = $('#registration_href').val();
    });
  };
  checkExistsSchool = function() {
    var cityID, emptyMessage, progressMessage, searchNumber, successBlock;
    searchNumber = $('.js-number_field').val();
    cityID = parseInt($('.js-city_id_field').val());
    if (!searchNumber || searchNumber.length <= 0 || cityID <= 0 || isNaN(cityID)) {
      return;
    }
    progressMessage = $('.js_search-in-progress');
    emptyMessage = $('.js_empty-search');
    successBlock = $('.js_founded-schools');
    progressMessage.slideDown(300);
    emptyMessage.hide();
    successBlock.hide();
    preloader.show();
    return $.getJSON(schoolAjaxPage, {
      CITY: cityID,
      SEARCH: searchNumber
    }, function(result) {
      var html, schoolList;
      preloader.hide();
      progressMessage.hide();
      if (result.hasOwnProperty('empty')) {
        emptyMessage.slideDown(300);
        return setTimeout(function() {
          return emptyMessage.slideUp(200);
        }, 3000);
      } else if (result.hasOwnProperty('success')) {
        schoolList = successBlock.find('.js_schools-list');
        html = '';
        $.each(result.success, function(key, school) {
          html += "<li><strong><a href=\"#\" class=\"js-choose_school\" data-id=\"" + school.ID + "\">" + school.NAME + "</a></strong>";
          if (school.hasOwnProperty('ADDRESS') && school.ADDRESS.length > 0) {
            html += " <small>(" + school.ADDRESS + ")</small>";
          }
          return html += '</li>';
        });
        schoolList.html(html);
        successBlock.show();
        return schoolList.find('.js-choose_school').on('click', ajaxSelectSchool);
      }
    });
  };
  $('.js_founded-schools').find('.msg__close').on('click', function(e) {
    e.preventDefault();
    return $('.js_founded-schools').slideUp(300, function() {
      return $(this).find('.msg').show();
    });
  });
  registrationForm.on('autocompleteSelect', function() {
    if ($('.js-number_field').val().length > 0) {
      return checkExistsSchool();
    }
  });
  numberTimer = null;
  $('.js-number_field').on('keyup', function() {
    if (!(typeof numberTimer === 'null')) {
      clearTimeout(numberTimer);
    }
    return numberTimer = setTimeout(function() {
      return checkExistsSchool();
    }, 1000);
  });
  return $('.js-choose_school').on('click', ajaxSelectSchool);
});

//# sourceMappingURL=data:application/json;base64,
