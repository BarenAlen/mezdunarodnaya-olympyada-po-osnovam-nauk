var addHeaderFixedClass, getViewportSize, removeHeaderFixedClass;

getViewportSize = function() {
  var a, b, c, d;
  a = document.documentElement;
  d = document.body;
  b = document.compatMode === "CSS1Compat";
  c = window.opera;
  return {
    w: b && c ? window.innerWidth : b && !c ? a.clientWidth : d.clientWidth,
    h: b && c ? window.innerHeight : b && !c ? a.clientHeight : d.clientHeight
  };
};

addHeaderFixedClass = function(header) {
  var headerTop;
  headerTop = $('.js-header_top');
  if (headerTop.length <= 0) {
    header.before('<div class="js-header_top"></div>');
    $('.js-header_top').css('height', header.height());
  } else {
    headerTop.show();
  }
  return $('body').addClass('fixed-header');
};

removeHeaderFixedClass = function(header) {
  var headerTop;
  headerTop = $('.js-header_top');
  if (headerTop.length > 0) {
    headerTop.hide();
  }
  return $('body').removeClass('fixed-header');
};

$(function() {
  var footer, footerScrollEvent, header, headerScrollEvent, headerTop, widthBy, widthByElement;
  header = $('.control-header');
  footer = $('.control-footer');
  footerScrollEvent = function(widthBy) {
    var footerTop;
    footerTop = $('.js-footer_top').offset().top;
    if ($(this).scrollTop() + getViewportSize()['h'] < footerTop) {
      if (widthBy) {
        footer.css('width', $(footer.closest(widthBy)[0]).width());
      } else {
        footer.css('width', footer.parent().width());
      }
      return $('body').addClass('fixed-footer');
    } else {
      return $('body').removeClass('fixed-footer');
    }
  };
  headerScrollEvent = function(headerTop) {
    var scrollTop;
    scrollTop = $(this).scrollTop();
    if (scrollTop > headerTop) {
      header.css('width', header.parent().width());
      return addHeaderFixedClass(header);
    } else {
      return removeHeaderFixedClass(header);
    }
  };
  if (footer.length) {
    widthBy = footer.data('width-by');
    footer.before('<span class="hidden js-footer_top"></span>');
    $('body').addClass('fixed-footer');
    if (widthBy) {
      widthByElement = footer.closest(widthBy);
      if (widthByElement.length) {
        footer.css('width', $(widthByElement[0]).width());
      }
    }
    $(window).on('scroll', function() {
      return footerScrollEvent(widthBy);
    });
  }
  if (header.length) {
    headerTop = header.offset().top;
    if ($(window).scrollTop() > headerTop) {
      headerScrollEvent(headerTop);
    }
    return $(window).on('scroll', function() {
      return headerScrollEvent(headerTop);
    });
  }
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvY2tzL2NvbnRyb2wtcGFuZWxzLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlcyI6WyJibG9ja3MvY29udHJvbC1wYW5lbHMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUE7O0FBQUEsZUFBQSxHQUFrQixTQUFBO0FBQ2hCLE1BQUE7RUFBQSxDQUFBLEdBQUksUUFBUSxDQUFDO0VBQ2IsQ0FBQSxHQUFJLFFBQVEsQ0FBQztFQUNiLENBQUEsR0FBSSxRQUFRLENBQUMsVUFBVCxLQUF1QjtFQUMzQixDQUFBLEdBQUksTUFBTSxDQUFDO0FBRVgsU0FBTztJQUNMLENBQUEsRUFBTSxDQUFBLElBQU0sQ0FBVCxHQUFnQixNQUFNLENBQUMsVUFBdkIsR0FBMEMsQ0FBQSxJQUFNLENBQUMsQ0FBVixHQUFpQixDQUFDLENBQUMsV0FBbkIsR0FBb0MsQ0FBQyxDQUFDLFdBRDNFO0lBRUwsQ0FBQSxFQUFNLENBQUEsSUFBTSxDQUFULEdBQWdCLE1BQU0sQ0FBQyxXQUF2QixHQUEyQyxDQUFBLElBQU0sQ0FBQyxDQUFWLEdBQWlCLENBQUMsQ0FBQyxZQUFuQixHQUFxQyxDQUFDLENBQUMsWUFGN0U7O0FBTlM7O0FBV2xCLG1CQUFBLEdBQXNCLFNBQUMsTUFBRDtBQUNwQixNQUFBO0VBQUEsU0FBQSxHQUFZLENBQUEsQ0FBRSxnQkFBRjtFQUNaLElBQUcsU0FBUyxDQUFDLE1BQVYsSUFBb0IsQ0FBdkI7SUFDRSxNQUFNLENBQUMsTUFBUCxDQUFjLG1DQUFkO0lBQ0EsQ0FBQSxDQUFFLGdCQUFGLENBQW1CLENBQUMsR0FBcEIsQ0FBd0IsUUFBeEIsRUFBa0MsTUFBTSxDQUFDLE1BQVAsQ0FBQSxDQUFsQyxFQUZGO0dBQUEsTUFBQTtJQUlFLFNBQVMsQ0FBQyxJQUFWLENBQUEsRUFKRjs7U0FNQSxDQUFBLENBQUUsTUFBRixDQUFTLENBQUMsUUFBVixDQUFtQixjQUFuQjtBQVJvQjs7QUFVdEIsc0JBQUEsR0FBeUIsU0FBQyxNQUFE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Y2VzQ29udGVudCI6WyJnZXRWaWV3cG9ydFNpemUgPSAtPlxyXG4gIGEgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnRcclxuICBkID0gZG9jdW1lbnQuYm9keVxyXG4gIGIgPSBkb2N1bWVudC5jb21wYXRNb2RlID09IFwiQ1NTMUNvbXBhdFwiXHJcbiAgYyA9IHdpbmRvdy5vcGVyYVxyXG5cclxuICByZXR1cm4ge1xyXG4gICAgdzogaWYgYiBhbmQgYyB0aGVuIHdpbmRvdy5pbm5lcldpZHRoIGVsc2UgaWYgYiBhbmQgIWMgdGhlbiBhLmNsaWVudFdpZHRoIGVsc2UgZC5jbGllbnRXaWR0aCxcclxuICAgIGg6IGlmIGIgYW5kIGMgdGhlbiB3aW5kb3cuaW5uZXJIZWlnaHQgZWxzZSBpZiBiIGFuZCAhYyB0aGVuIGEuY2xpZW50SGVpZ2h0IGVsc2UgZC5jbGllbnRIZWlnaHRcclxuICB9XHJcblxyXG5hZGRIZWFkZXJGaXhlZENsYXNzID0gKGhlYWRlcikgLT5cclxuICBoZWFkZXJUb3AgPSAkKCcuanMtaGVhZGVyX3RvcCcpXHJcbiAgaWYgaGVhZGVyVG9wLmxlbmd0aCA8PSAwXHJcbiAgICBoZWFkZXIuYmVmb3JlKCc8ZGl2IGNsYXNzPVwianMtaGVhZGVyX3RvcFwiPjwvZGl2PicpXHJcbiAgICAkKCcuanMtaGVhZGVyX3RvcCcpLmNzcygnaGVpZ2h0JywgaGVhZGVyLmhlaWdodCgpKVxyXG4gIGVsc2VcclxuICAgIGhlYWRlclRvcC5zaG93KClcclxuXHJcbiAgJCgnYm9keScpLmFkZENsYXNzKCdmaXhlZC1oZWFkZXInKVxyXG5cclxucmVtb3ZlSGVhZGVyRml4ZWRDbGFzcyA9IChoZWFkZXIpIC0+XHJcbiAgaGVhZGVyVG9wID0gJCgnLmpzLWhlYWRlcl90b3AnKVxyXG4gIGlmIGhlYWRlclRvcC5sZW5ndGggPiAwXHJcbiAgICBoZWFkZXJUb3AuaGlkZSgpXHJcblxyXG4gICQoJ2JvZHknKS5yZW1vdmVDbGFzcygnZml4ZWQtaGVhZGVyJylcclxuXHJcbiQgLT5cclxuICBoZWFkZXIgPSAkKCcuY29udHJvbC1oZWFkZXInKVxyXG4gIGZvb3RlciA9ICQoJy5jb250cm9sLWZvb3RlcicpXHJcblxyXG4gIGZvb3RlclNjcm9sbEV2ZW50ID0gKHdpZHRoQnkpIC0+XHJcbiAgICBmb290ZXJUb3AgPSAkKCcuanMtZm9vdGVyX3RvcCcpLm9mZnNldCgpLnRvcFxyXG5cclxuICAgIGlmICQodGhpcykuc2Nyb2xsVG9wKCkgKyBnZXRWaWV3cG9ydFNpemUoKVsnaCddIDwgZm9vdGVyVG9wXHJcbiAgICAgIGlmIHdpZHRoQnlcclxuICAgICAgICBmb290ZXIuY3NzKCd3aWR0aCcsICQoZm9vdGVyLmNsb3Nlc3Qod2lkdGhCeSlbMF0pLndpZHRoKCkpXHJcbiAgICAgIGVsc2VcclxuICAgICAgICBmb290ZXIuY3NzKCd3aWR0aCcsIGZvb3Rlci5wYXJlbnQoKS53aWR0aCgpKVxyXG5cclxuICAgICAgJCgnYm9keScpLmFkZENsYXNzKCdmaXhlZC1mb290ZXInKTtcclxuICAgIGVsc2VcclxuICAgICAgJCgnYm9keScpLnJlbW92ZUNsYXNzKCdmaXhlZC1mb290ZXInKTtcclxuXHJcbiAgaGVhZGVyU2Nyb2xsRXZlbnQgPSAoaGVhZGVyVG9wKSAtPlxyXG4gICAgc2Nyb2xsVG9wID0gJCh0aGlzKS5zY3JvbGxUb3AoKVxyXG5cclxuICAgIGlmIHNjcm9sbFRvcCA+IGhlYWRlclRvcFxyXG4gICAgICBoZWFkZXIuY3NzKCd3aWR0aCcsIGhlYWRlci5wYXJlbnQoKS53aWR0aCgpKVxyXG5cclxuICAgICAgYWRkSGVhZGVyRml4ZWRDbGFzcyhoZWFkZXIpXHJcbiAgICBlbHNlXHJcbiAgICAgIHJlbW92ZUhlYWRlckZpeGVkQ2xhc3MoaGVhZGVyKVxyXG4gIFxyXG4gIGlmIGZvb3Rlci5sZW5ndGhcclxuICAgIHdpZHRoQnkgPSBmb290ZXIuZGF0YSgnd2lkdGgtYnknKVxyXG5cclxuICAgIGZvb3Rlci5iZWZvcmUoJzxzcGFuIGNsYXNzPVwiaGlkZGVuIGpzLWZvb3Rlcl90b3BcIj48L3NwYW4+Jyk7XHJcblxyXG4gICAgJCgnYm9keScpLmFkZENsYXNzKCdmaXhlZC1mb290ZXInKTtcclxuXHJcbiAgICBpZiB3aWR0aEJ5XHJcbiAgICAgIHdpZHRoQnlFbGVtZW50ID0gZm9vdGVyLmNsb3Nlc3Qod2lkdGhCeSk7XHJcbiAgICAgIGlmIHdpZHRoQnlFbGVtZW50Lmxlbmd0aFxyXG4gICAgICAgIGZvb3Rlci5jc3MoJ3dpZHRoJywgJCh3aWR0aEJ5RWxlbWVudFswXSkud2lkdGgoKSk7XHJcblxyXG4gICAgJCh3aW5kb3cpLm9uICdzY3JvbGwnLCAoKSAtPlxyXG4gICAgICBmb290ZXJTY3JvbGxFdmVudCh3aWR0aEJ5KVxyXG4gICAgICAgIFxyXG4gIGlmIGhlYWRlci5sZW5ndGhcclxuICAgIGhlYWRlclRvcCA9IGhlYWRlci5vZmZzZXQoKS50b3BcclxuXHJcbiAgICBpZiAkKHdpbmRvdykuc2Nyb2xsVG9wKCkgPiBoZWFkZXJUb3BcclxuICAgICAgaGVhZGVyU2Nyb2xsRXZlbnQoaGVhZGVyVG9wKVxyXG5cclxuICAgICQod2luZG93KS5vbiAnc2Nyb2xsJywgKCkgLT5cclxuICAgICAgaGVhZGVyU2Nyb2xsRXZlbnQoaGVhZGVyVG9wKVxyXG4gICJdfQ==
